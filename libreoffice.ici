#!/bin/sh

SCRIPTS="`command -v "$0"`" ; [ -x "$SCRIPTS" -o ! -x "$0" ] || SCRIPTS="$0" ; case "`basename "$SCRIPTS"`" in *.*) true ;; *sh) SCRIPTS="$1" ;; esac ; case "$SCRIPTS" in /*) ;; *) SCRIPTS="`pwd`/$SCRIPTS" ;; esac ; delie() { while [ -h "$SCRIPTS" ] ; do SCRIPTS2="`readlink "$SCRIPTS"`" ; case "$SCRIPTS2" in /*) SCRIPTS="$SCRIPTS2" ;; *) SCRIPTS="`dirname "$SCRIPTS"`/$SCRIPTS2" ;; esac ; done ; } ; delie ; SCRIPTS="`dirname "$SCRIPTS"`" ; delie

# Si on reprend la compil' d'une autre version, bien penser à faire sauter /tmp/local et /tmp/soustmp
export SANSSU=1 INSTALLS=/tmp/local GUILI_PATH=/tmp/local:/usr/local
export PREFIXE_UTILISER="$INSTALLS"
export TMP=/tmp/soustmp
mkdir -p "$TMP"

# Des fois qu'/usr/local se soit installé partout dans le $PATH.
PATH=/usr/bin:/usr/sbin:/bin:/sbin
CPPFLAGS= LD_LIBRARY_PATH= PYTHONPATH=

# Constitution de l'environnement minimal pour notre LibreOffice.
# Le but: qu'il soit compilé le plus indépendamment possible (sans dépendance envers notre $INSTALLS habituel).
# Seuls certains logiciels (dont le compilo) rentreront en petit plus.
minEnv()
{
	(
		. "$SCRIPTS/util.sh"
		exclusivementPrerequis
		for v in PATH LD_LIBRARY_PATH
		do
			val="`eval 'args_reduc -d : "$'$v'"'`"
			echo "$v=$val"
		done
		for v in CC CXX
		do
			eval "echo \"$v=\$$v\""
		done
		for v in CPPFLAGS CFLAGS CXXFLAGS LDFLAGS
		do
			val="`eval 'args_reduc "$'$v'"'`"
			echo "$v=$val"
		done
	)
}
minEnv="`minEnv | tr '\012' '\003'`"
IFS="`printf '\003'`"
export $minEnv
unset IFS

set -e

if [ "x$1" = x- ] ; then # Pour finir uniquement.
	export continuer=1
	./libreoffice
else # Pour finir uniquement.

# La 5.3.1.2 est livrée avec des bouts possédant un libtool 2.4.2, d'autre avec un libtool 2.4.6. Et libtool gueule quand il détecte qu'il est lancé avec des macros d'une autre version que lui. Donc on doit y aller de façon incrémentale: avancer au maximum dans la compilation avec le libtool par défaut, basculer en 2.4.2 pour passer les bouts livrés avec un libtool 2.4.2, repasser en 2.4.6 lorsque l'on a pu avancer jusqu'à un morceau qui maintenant plante parce que lui est en 2.4.6, etc.

./7zip # Pour décompresser certaines archives (poppler).
./bison # Celui corrigé pour _Noreturn, sera utilisé à plusieurs endroits.
./python '>= 3' # libxml n'est pas contre compiler son liant Python, encore faut-il qu'il puisse l'installer quelque part.
# LLVM (ou clang) n'est pas strictement nécessaire, mais mesa est destabilisé par le fait de trouver un llvm (dans mon /usr/local) et pas ses biblios dans $INSTALLS.
v_clang="< 6" # Pour LO 5
v_clang="< 8" # LO 6
./clang "$v_clang" || ./clang "$v_clang" || ./clang "$v_clang" # La compil finit par passer.
./binutils # Si on a déjà compilé un binutils, mieux vaut le recompiler avec conscience du nouveau clang (là: /usr/local/bin/ld : /usr/local/clang-7.0.1/bin/../lib/LLVMgold.so : erreur lors du chargement du greffon : Cannot open "/usr/local/clang-7.0.1/bin/../lib/LLVMgold.so").
./libssh +ossl10 # Idem, curl est déchiré entre sa version d'/usr/local compilée avec libssh, et celle d'$INSTALLS qui initialement ne l'avait pas.
./curl +ossl10

# À partir de là, les outils que l'on a installés doivent suffire à compiler libreoffice. On enlève donc notre tuteur.
unset GUILI_PATH

tourner()
{
	while [ $# -gt 0 ]
	do
		export v_libtool="$1"
		shift
		./libreoffice + && return 0 || true
		export continuer=1
	done
	# Si on est arrivés jusqu'ici, c'est qu'aucune compil n'a satisfait.
	false
}

# 5.3.1.2
#tourner "" 2.4.2 2.4.6 2.4.2 2.4.6
tourner ""

fi # Pour finir uniquement.

. "$SCRIPTS/util.sh"

monooo="`versions libreoffice | tail -1`"

installsTemp="$INSTALLS"
unset INSTALLS
. "$SCRIPTS/util.sh"

# Si ça se trouve l'$INSTALLS défini plus haut (maintenant dans $installsTemp) a été écrabouillé par l'util.sh. Tout dépend de si l'util.local.sh tient compte de l'environnement ou force. S'il s'avère que nous avons bien installé dans un dossier temporaire, nous recopions maintenant.
if [ "$installsTemp" != "$INSTALLS" ]
then
# À FAIRE: copier les biblios n'existant pas déjà dans un dossier propre, et ajouter celui-ci en tête de LD_LIBRARY_PATH dans le lanceur. En espérant que ça ne le gêne pas qu'on ait déplacé les biblios (dépend des OS).
sudoku cp -R "$monooo" "$INSTALLS/"
sudo ./utiliser "`basename "$monooo"`"
fi
