#!/bin/sh
# Copyright (c) 2005 Guillaume Outters
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

set -e

delieS() { local s2 ; while [ -h "$s" ] ; do s2="`readlink "$s"`" ; case "$s2" in [^/]*) s2="`dirname "$s"`/$s2" ;; esac ; s="$s2" ; done ; } ; SCRIPTS() { local s="`command -v "$0"`" ; [ -x "$s" -o ! -x "$0" ] || s="$0" ; case "`basename "$s"`" in *.*) true ;; *sh) s="$1" ;; esac ; case "$s" in [^/]*) s="`pwd`/$s" ;; esac ; delieS ; s="`dirname "$s"`" ; delieS ; SCRIPTS="$s" ; } ; SCRIPTS
. "$SCRIPTS/util.sh"

v 8.0.1 && modifs="exclusivementPrerequis detectionPerl detectionReadline" && contribs="pgcrypto" && prerequis="ncurses readline zlib openssl < 1.1 python < 3" || true
v 8.0.3 || true
v 9.1.2 && modifs="exclusivementPrerequis bsdAvecPythonThreade detectionPerl detectionReadline" && contribs="$contribs tablefunc" || true
v 9.2.1 && modifs="exclusivementPrerequis detectionPerl detectionReadline" && contribs="$contribs hstore" || true
v 9.2.9 || true
v 9.2.18 || true
v 9.5.3 && prerequis="ncurses readline zlib openssl python < 3" || true
v 9.6.1 && modifs="exclusivementPrerequis detectionPerl detectionReadline pathZic" || true
v 9.6.5 || true
v 9.6.6 || true
v 9.6.10 || true
v 9.6.11 || true

prerequisMake()
{
	# A besoin d'un make GNU.
	# Problème: un 4.2.1 (dernière version officielle) compilé par gcc 7 sur une Ubuntu 18.04 plante en segfault sur des if.
	# On va donc dire que si on est sur Linux, la version en place est suffisante pour compiler PostgreSQL.
	case `uname` in
		Linux) true ;;
		*) prerequis="$prerequis make" ;;
	esac
}

detectionReadline()
{
	filtrer configure sed -e 's#" -lncurses"#" -lncursesw" " -lncurses"#g'
}

bsdAvecPythonThreade()
{
	filtrer configure sed -e '/freebsd.*)$/,/;;/d'
}

detectionPerl()
{
	avecPerl="--without-perl"
	if command -v perl 2> /dev/null >&1
	then
		if perl -MConfig -e 'print $Config{useshrplib}' | grep -q true
		then
			avecPerl="--with-perl"
		fi
	fi
	
	OPTIONS_CONF="$OPTIONS_CONF $avecPerl"
}

pathZic()
{
	filtrer src/timezone/Makefile sed -e "/ZIC *:*=/s#=#=PATH=\"$PATH\" LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH\" #"
}

archive=http://ftp.postgresql.org/pub/source/v$version/postgresql-$version.tar.bz2
pge $version 9 || jar=http://jdbc.postgresql.org/download/postgresql-8.0-310.jdbc3.jar

option ossl10 || true # L'option ossl10 sera utilisée plus tard (par prerequisOpenssl), mais il faut qu'on la consomme avant destiner(): ce dernier va l'inscrire dans le chemin d'install, et il ne veut rien mettre qui ne soit vraiment exploité. option() permet de lui dire "si, si, c'est une option que l'on prend bien en compte".

destiner

# Si on détecte perl, on laissera le configure le détecter, mais uniquement dans notre version prérequise.
if command -v perl > /dev/null 2>&1
then
	prerequis="$prerequis perl"
fi
prerequisMake
prerequisOpenssl

prerequis

obtenirEtAllerDansVersion

echo Corrections… >&2
for modif in true $modifs
do
	"$modif"
done

echo Configuration… >&2

# À FAIRE: dans le temps je compilais avec --with-pam --with-rendezvous. Manifestement ça demande une détection et une condition.
./configure --prefix="$dest" --enable-thread-safety --with-python --with-openssl $OPTIONS_CONF

echo Compilation… >&2
make
sed < contrib/start-scripts/freebsd > share.init.postgresql -e "/^prefix=/s#=.*#=$INSTALLS#"
chmod a+x share.init.postgresql

echo Installation… >&2
sudo make install
pge $version 9 || sudo cp `obtenir "$jar"` "$dest/lib/postgresql.jar"
for contrib in $contribs
do
	( cd contrib/$contrib && make && sudo make install )
done
sudo cp share.init.postgresql "$dest/share/init.postgresql"

sutiliser
