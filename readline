#!/bin/sh
# Copyright (c) 2004 Guillaume Outters
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

set -e

# Passage en Delirant: attention au lien avec une biblio terminfo?
DelieS() { local s2 ; while [ -h "$s" ] ; do s2="`readlink "$s"`" ; case "$s2" in [^/]*) s2="`dirname "$s"`/$s2" ;; esac ; s="$s2" ; done ; } ; SCRIPTS() { local s="`command -v "$0"`" ; [ -x "$s" -o ! -x "$0" ] || s="$0" ; case "`basename "$s"`" in *.*) true ;; *sh) s="$1" ;; esac ; case "$s" in [^/]*) s="`pwd`/$s" ;; esac ; DelieS ; s="`dirname "$s"`" ; DelieS ; SCRIPTS="$s" ; } ; SCRIPTS
. "$SCRIPTS/util.sh"

v 5.0 && modifs="darwin8aussi asdc" || true
v 5.2.14 || true
v 6.1.2 && modifs=asdc || true
v 6.2.1 || true
v 6.3.8 || true
v 7.0.5 || true
v 8.1.1 || true
v 8.2.13 || true

# Modifications

# antislash dollar compl√©tion
# Sur ls $t/truc<tab> lorsqu'il existe un "truc √† espaces",
# readline compl√®te en \$t/truc\ √†\ espaces,
# avec des \ corrects devant les espaces, mais aussi un devant $.
asdc()
{
	local vr
	case "$version" in
		8.1.*) vr=8.1 ;;
		# Pour le moment on ne sait pas g√©rer les autres versions de readline.
		*) return ;;
	esac
	# Ne fait-on pas exactement ce que ferait un shopt -u complete_fullquote?
	patch -p0 < "$SCRIPTS/readline.non-intrusive-completion-quoting.$vr.patch"
	# Celui-ci est-il utile? Ne pourrait-on pas simplement activer rl_completion_suppress_quote?
	patch -p0 < "$SCRIPTS/readline.non-intrusive-completion-quoting.declose.$vr.patch"
}

darwin8aussi()
{
	filtrer support/shobj-conf sed -e 's/darwin7/darwin[78]/'
}

darwin89aussi()
{
	filtrer support/shobj-conf sed -e 's/darwin7/darwin[789]/' -e 's/darwin8/darwin[89]/'
}

tinfoliee()
{
	# Sur certains syst√®mes, la readline "standard" (ex.: celle des ports sous FreeBSD) est li√©e √† la biblio de terminfo (ncursesw, tinfow, etc.).
	# Si on installe "notre" readline sans ce lien, on casse tous les logiciels qui, reposant sur ce 2-en-1, sont li√©s √† readline sans lien explicite √† la biblio terminfo (ex.: fontforge sous FreeBSD).
	# On peut le voir (outre via ldd qui montre les biblios li√©es) en cherchant un symbole terminfo (ex.: UP) dans readline: par readelf -s il appara√Æt UND(efined), montrant qu'il en aura de toute fa√ßon besoin, mais par elfdump -a (qui lui suit les biblios indiqu√©es par ldd) il appara√Ætra tant√¥t en STT_OBJECT (si li√©e), tant√¥t en STT_NOTYPE (si c'est au programme appelant de lier explicitement √† readline ET une biblio de terminfo √† son choix).
	# "ncurses replace tinfo" sur Google montre que 2 versions de readline existent, celle embarquant tinfo et celle sans:
	# Ex.: https://github.com/mawww/kakoune/issues/2554 ou https://github.com/nzbget/nzbget/issues/188 ou https://forums.gentoo.org/viewtopic-t-1100154-start-0.html
	# √Ä FAIRE: v√©rifier qu'avec cette modif on peut se passer de readlineNcurses dans php.
	
	local f avec=
	case "$argOptions+" in
		*+terminc[-+]*) avec=1 ;;
		*+termsep[-+]*) avec= ;;
		*)
			for f in /lib/libreadline.so /usr/lib/libreadline.so /usr/local/lib/libreadline.so
			do
				[ -e "$f" ] || continue
				ldd "$f" 2> /dev/null | grep -q 'libtinfo\|libncurses' || continue
				avec=1
				break
			done
			case "$avec" in
				"") argOptions="$argOptions=termsep" ;;
				*) argOptions="$argOptions=terminc" ;;
			esac
			;;
	esac

	printf "[32mreadline [36m"
	case "$avec" in
		"") printf "ind√©pendante de terminfo[0m (√† lier depuis les appelants)" ;;
		1)
			printf "sera li√©e √† terminfo"
			OPTIONS_CONF="$OPTIONS_CONF --with-shared-termcap-library"
			;;
	esac
	echo "[0m"
}

rustine="`echo "$version" | cut -s -d . -f 3`"
mineure="`echo "$version" | cut -d . -f 1-2`"

archive="http://ftp.gnu.org/gnu/$logiciel/$logiciel-$mineure.tar.gz"

tinfoliee

prerequis

destiner

echo Obtention et d√©compression‚Ä¶ >&2
obtenirEtAllerDansVersion
n=1
while [ $n -le $rustine ]
do
	v2="`echo $mineure | tr -d .`"
	url="`dirname "$archive"`/$logiciel-$mineure-patches/$logiciel$v2-`printf "%03.3d" $n`"
	patch -p0 < "`obtenir "$url"`"
	n=`expr $n + 1`
done

echo Correction‚Ä¶ >&2
for modif in true $modifs ; do $modif ; done

echo Configuration‚Ä¶ >&2
./configure --prefix="$dest" $OPTIONS_CONF

echo Compilation‚Ä¶ >&2
make

echo Installation‚Ä¶ >&2
sudo make install

sutiliser
