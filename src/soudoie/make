#!/bin/sh

set -e

PREFIX=/usr/local
SYSCONFDIR=/etc
CONFIG= # Vaudra par dÃ©faut $SYSCONFDIR/surdoues.

#- Utilitaires -----------------------------------------------------------------

diag()
{
	echo "[90m+ $*[0m" >&2
	"$@"
	status=$?
	return $status
}

diago()
{
	local output="`while [ $# -gt 0 ] ; do [ "x$1" = x-o ] && echo "$2" && exit 0 || shift ; done`"
	[ "x$1" = x-o ] && shift && shift || true
	if ! diag "$@"
	then
		[ -n "$output" ] && rm -f "$output" || true
		return $status
	fi
	return 0
}

#- Construction ----------------------------------------------------------------

all()
{
	soudoie
}

soudoie()
{
	[ ! -f soudoie ] || find . -type f \( -name "*.c" -o -name "*.h" \) -newer soudoie$SUFFIXE | grep -q . || return 0
	
	local f
	local CFLAGS="$CFLAGS"
	[ -n "$CONFIG" -o -z "$_CONFIG" ] || CONFIG="$_CONFIG"
	[ -z "$SYSCONFDIR" -o -n "$CONFIG" ] || CONFIG="$SYSCONFDIR/surdoues"
	[ -z "$CONFIG" ] || CFLAGS="$CFLAGS -DCONFIG=$CONFIG"
	mkdir -p objs$SUFFIXE
	for f in *.c
	do
		diago cc $CFLAGS -c -o "objs$SUFFIXE/$f.o" "$f"
	done
	diago cc -o soudoie$SUFFIXE objs$SUFFIXE/*.c.o
}

install()
{
	./make
	#( [ `id -u` -eq 0 ] && chmod 4755 soudoie || sudo sh -c 'chown 0:0 soudoie && chmod 4755 soudoie' )
	diago -o '' mkdir -p "$PREFIX/bin"
	diago -o '' cp soudoie "$PREFIX/bin/"
	diago -o '' chown 0:0 "$PREFIX/bin/soudoie"
	diago -o '' chmod 4755 "$PREFIX/bin/soudoie"
}

_listeTests()
{
	local tests="`grep TEST_ < test.c | sed -e 's#TEST_[_A-Z0-9=]*#@&@#g' | tr @ '\012' | grep '^TEST_.' | sort -u`"
	# Pour les tests figurant sous deux forme (une prenant une valeur, une sans) on ne garde que celui avec valeur.
	local filtre="`echo "$tests" | tr ' ' '\012' | grep = | sed -e 's/=.*//' | tr '\012' '|'`"
	echo "$tests" | tr ' ' '\012' | egrep -v "^($filtre)$"
}

_test()
{
	local cflags="-DTEST -g -O0 $CFLAGS"
	_listeTests | while read test egal
	do
		echo "[90m=== $test ===[0m" >&2
		CFLAGS="$cflags -D$test" LDFLAGS="-g -O0 $LDFLAGS" SUFFIXE=.test _CONFIG=objs.test/config ./make && ./soudoie.test || echo "[31m# Sorti en erreur $?[0m" >&2
	done
}

clean()
{
	find . \( -name "*.o" -o -name "*.core" \) -exec rm -f {} \;
	rm -Rf soudoie soudoie.test objs* surdoues.test.conf
}

quoi="$1"
case "$quoi" in
	"") quoi=all ;;
	test) quoi=_test ;;
esac
$quoi
