#!/bin/sh
# Copyright (c) 2004 Guillaume Outters
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

set -e

DelieS() { local s2 ; while [ -h "$s" ] ; do s2="`readlink "$s"`" ; case "$s2" in [^/]*) s2="`dirname "$s"`/$s2" ;; esac ; s="$s2" ; done ; } ; SCRIPTS() { local s="`command -v "$0"`" ; [ -x "$s" -o ! -x "$0" ] || s="$0" ; case "`basename "$s"`" in *.*) true ;; *sh) s="$1" ;; esac ; case "$s" in [^/]*) s="`pwd`/$s" ;; esac ; DelieS ; s="`dirname "$s"`" ; DelieS ; SCRIPTS="$s" ; } ; SCRIPTS
. "$SCRIPTS/util.sh"

v 1.9.1 && modifs="" && prerequis="pcre openssl zlib" || true
v 1.10.1 || true
v 1.11.5 || true
v 1.12.2 || true
v 1.15.8 || true
v 1.15.12 || true
v 1.17.1 || true
v 1.17.4 || true

archive="http://nginx.org/download/nginx-$version.tar.gz"

# https://forum.nginx.org/read.php?29,286027,286027
v_defs=0
defs()
{
	# Le patch de FreeBSD, en création de fichier, s'en tire bien la première fois (il crée), mais la seconde fois il ajoute le contenu plutôt que de remplacer.
	rm -f src/core/ngx_conf_def.[ch]
	patch -p1 < "$SCRIPTS/nginx.defs.patch"
}

# N.B.: relinc pourra sauter, defs ayant vocation à prendre sa place. Cependant on le garde tant que tournent des nginx reposant sur relinc.
relinc()
{
	local suff=
	case " $modifs " in
		*" defs "*) suff="-defs"
	esac
	patch -p1 < "$SCRIPTS/nginx.relinc$suff.patch"
}

# Variables

moduleNginxSiOption()
{
	local o="$1"
	local s="$2"
	if option "$o"
	then
		case "$s" in
			http*://*) # Module externe
				local suffixe="`echo "$s" | sed -e 's#.*/[^.]*##' -e 's#.*\.[^.][^.][^.][^.][^.]*##'`"
				local nomArchive="`basename "$s"`"
				if echo "$nomArchive" | egrep -vqe '-[0-9]+\.[0-9]+(\.[0-9]+)*(\.[a-z][a-z0-9]*)+$' # Si le nom de l'archive ne porte pas de numéro de version (ex.: git), on lui en donne un daté.
				then
					nomArchive="nginx_module_$o.`date +%Y%m%d`$suffixe"
				fi
				MODULES_EXTERNES="$MODULES_EXTERNES$nomArchive|$s|"
				;;
			*) # Module interne
				OPTIONS_CONF="$OPTIONS_CONF --with-$s"
				;;
		esac
	fi
}

obtenirModulesExternes()
{
	IFS='|'
	tifs _obtenirModulesExternes $MODULES_EXTERNES
}

_obtenirModulesExternes()
{
	local d
	while [ $# -gt 0 ]
	do
		d="`obtenirEtAllerDans "$2" "$1" ; pwd`"
		[ -n "$d" -a -d "$d" ] || return 1
		OPTIONS_CONF="$OPTIONS_CONF --add-module=$d"
		shift
		shift
	done
}

OPTIONS_CONF=
MODULES_EXTERNES=

moduleNginxSiOption realip http_realip_module
moduleNginxSiOption geoip http_geoip_module
moduleNginxSiOption upstreamcheck https://github.com/yaoweibin/nginx_upstream_check_module/archive/master.zip
moduleNginxSiOption headersmore https://github.com/openresty/headers-more-nginx-module/archive/master.zip
option defs && modifs="$modifs defs" && argOptions="`options "$argOptions+defs$v_defs"`" || true # On versionne nos defs tant qu'elles ne sont pas stables, de manière à ce qu'un changement force l'install d'un nouvel nginx.
if option relinc ; then modifs="$modifs relinc" ; fi

# Boulot

destiner

prerequis

echo Obtention et décompression… >&2
obtenirEtAllerDansVersion

obtenirModulesExternes

echo Correction… >&2
for modif in true $modifs ; do $modif "$@" ; done

echo Configuration… >&2
for p in "$@" ; do case "$p" in --with-debug) OPTIONS_CONF="$OPTIONS_CONF $p" ;; esac ; done
./configure --prefix="$dest" --with-http_ssl_module --with-cc-opt="$CPPFLAGS $CFLAGS" --with-ld-opt="$LDFLAGS" $OPTIONS_CONF

echo Compilation… >&2
make
moire "$@" --with-debug
[ $MOIRE_STATUT = fils ] || sudoku mv -f "$dest/sbin/nginx" "$dest/sbin/nginx-debug"

echo Installation… >&2
sudo make install

sutiliser
