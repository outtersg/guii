#!/bin/sh
# Copyright (c) 2004,2009 Guillaume Outters
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

set -e

DelieS() { local s2 ; while [ -h "$s" ] ; do s2="`readlink "$s"`" ; case "$s2" in [^/]*) s2="`dirname "$s"`/$s2" ;; esac ; s="$s2" ; done ; } ; SCRIPTS() { local s="`command -v "$0"`" ; [ -x "$s" -o ! -x "$0" ] || s="$0" ; case "$s" in */bin/*sh) case "`basename "$s"`" in *.*) true ;; *sh) s="$1" ;; esac ;; esac ; case "$s" in [^/]*) s="`pwd`/$s" ;; esac ; DelieS ; s="`dirname "$s"`" ; DelieS ; SCRIPTS="$s" ; } ; SCRIPTS
. "$SCRIPTS/util.sh"

prerequis="zlib iconv icu openssl sqlite"
v 2.0.16 && modifs="cheminBiblios" || true
v 2.2.3 && prerequis="$prerequis libstemmer clucene" && modifs="cheminBiblios avecLucene" || true
v 2.2.24 || true
#v 2.2.25 || true # http://dovecot.org/list/dovecot/2016-July/105084.html, reproduit chez moi.

# Modifications

cheminBiblios()
{
	# http://www.dovecot.org/list/dovecot/2010-November/055257.html
	# Dovecot efface l'env (dont LD_LIBRARY_PATH) lorsqu'il lance des sous-tâches, du genre dovecot-login.
	# En conséquence, au démarrage, la tâche se plante, le maître attend 2 s puis la relance, et là apparemment ça passe. Mais par contre entre-temps si un imapproxy a tenté de se connecter, il s'est cassé les dents (il a réussi à se connecter, mais n'a pas obtenu la bannière d'accueil), et pour lui c'est fatal.
	#LDFLAGS="$LDFLAGS -rpath $INSTALLS/lib"
	#export LDFLAGS
	# Par contre on n'ajoute pas notre rpath à LDFLAGS, mais à SSL_LIBS. Sinon ça se met à dégouliner sur toute l'appli, en particulier les "biblios internes" (lib-http, etc.): et leur libtool, configuré normalement pour les compiler en statiques, se met alors à les passer en dynamiques à la vue de ce seul paramètre, ce qui entraîne tout plein de problèmes (car pour compiler la biblio de niveau 3, il se lie juste avec la niveau 2, mais si celle-ci requiert la niveau 1, ça va planter en dynamique alors qu'en statique la niveau 2 inclut la 1).
	# Attention aussi: sur du LD_LIBRARY_PATH, il faudrait utiliser du -rpath (avec du -R clang plante, ne comprenant pas que c'est le -R pour compatibilité, qu'il faut passer en tant que -rpath à ld), alors qu'en SSL_LIBS, qui passe par libtool, il faut forcément du -rpath, car -rpath a une autre signification pour libtool ("où je dois installer cette biblio").
	SSL_LIBS="-L$INSTALLS/lib -lssl -lcrypto -R$INSTALLS/lib"
	export SSL_LIBS
}

avecLucene()
{
	options="--with-lucene --with-stemmer"
}

# Variables

v_maj="`echo "$version" | cut -d . -f 1-2`"
archive="http://dovecot.org/releases/$v_maj/$logiciel-$version.tar.gz"

destiner

prerequis

echo Obtention et décompression… >&2
obtenirEtAllerDansVersion

echo Correction… >&2
for modif in true $modifs ; do $modif ; done

echo Configuration… >&2
./configure --prefix="$dest" --with-sqlite $options # --with-ldap

echo Compilation… >&2
make

echo Installation… >&2
sudo make install
sudo mkdir -p "$dest/var/run"
. "$SCRIPTS/dovecot-exemple-config"

sutiliser
