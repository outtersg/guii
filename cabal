#!/bin/sh
# Copyright (c) 2006 Guillaume Outters
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

set -e

Delirant() { local s2 ; while [ -h "$s" ] ; do s2="`readlink "$s"`" ; case "$s2" in [^/]*) s2="`dirname "$s"`/$s2" ;; esac ; s="$s2" ; done ; } ; SCRIPTS() { local s="`command -v "$0"`" ; [ -x "$s" -o ! -x "$0" ] || s="$0" ; case "$s" in */bin/*sh) case "`basename "$s"`" in *.*) true ;; *sh) s="$1" ;; esac ;; esac ; case "$s" in [^/]*) local d="`dirname "$s"`" ; s="`cd "$d" ; pwd`/`basename "$s"`" ;; esac ; Delirant ; s="`dirname "$s"`" ; Delirant ; SCRIPTS="$s" ; } ; SCRIPTS
. "$SCRIPTS/util.sh"

# Historique des versions gérées

v 1.22.3.0 && prerequis="ghc < 9 ncurses \\ zlib" && modifs="detectionALaConDeLd" || true
v 1.22.5.0 || true
v 1.22.8.0 || true
v 1.24.0.0 || true
v 1.24.0.2 || true
v 2.4.0.0 && prerequis="ghc < 9 ncurses \\ zlib" && modifs= || true
v 2.4.1.0 || true
v 3.4.1.0 && prerequis="python ghc ncurses \\ zlib" || true
v 3.6.3.0 || true
v 3.8.1.0 || true
v 3.14.1.1 || true

archive="https://github.com/haskell/cabal/archive/refs/tags/cabal-install-v$version.tar.gz"
pge $version 2 || archive="https://www.haskell.org/cabal/release/cabal-install-$version/cabal-install-$version.tar.gz"

# Modifications

detectionALaConDeLd()
{
	# Cet abruti, pour détecter si le lieur est collect2 ou ld, essaie de le faire tourner en mode verbeux, puis traite la sortie en supprimant "tout ce qu'il y a après le nom du programme" (idée: transformer un /usr/bin/ld --machin --truc en /usr/bin/ld). Sauf que notre ld sous FreeBSD sort un /usr/bin/ld --machin -L/libexec/ld-elf.so", ce qui lui fait détecter un exécutable au doux nom de '/usr/bin/ld --machin -L/libexec/ld'.
	filtrer bootstrap.sh sed -e '/sed.*link/s#link\\)#link\\)[\\" ]#'

}

# Variables

destiner

prerequis

if false
then
	cd /tmp/cabal-install-$version
	echo "# Vous êtes dans un shell. Allez-y"\!
	bash
else
obtenirEtAllerDansVersion

echo Correction… >&2
for modif in true $modifs ; do $modif ; done

if pge $version 3
then

echo Compilation… >&2

commande="./bootstrap/bootstrap.py -d bootstrap/linux-`ghc --version | sed -e 's/.* //'`.json"

# Les échecs étant possibles (grosse compil pouvant se faire buter pour surconso mémoire en ft de la charge système), on s'ouvre une possibilité de rectification manuelle.
$commande || { echo "Je te colle dans un sh:" ; echo "$commande" ; /bin/sh ; }

# Bon là ils proposent d'utiliser ce cabal minimaliste pour refaire un cabal build, sauf que ça plante, et le minimaliste est parfaitement fonctionnel.

echo Installation… >&2

sudoku mkdir -p "$dest/bin"
sudoku cp _build/bin/* "$dest/bin/"

else # Version < 3

echo Configuration… >&2

cd cabal-install
./bootstrap.sh --no-doc

echo Compilation… >&2
make

echo Installation… >&2
sudo make install

fi
fi

sutiliser

echo "N'oubliez pas de lancer un cabal update pour télécharger la liste de paquets."
