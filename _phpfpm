#!/bin/sh
# Copyright (c) 2006 Guillaume Outters
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

set -e

absolutiseScripts() { SCRIPTS="$1" ; echo "$SCRIPTS" | grep -q ^/ || SCRIPTS="`dirname "$2"`/$SCRIPTS" ; } ; absolutiseScripts "`command -v "$0"`" "`pwd`/." ; while [ -h "$SCRIPTS" ] ; do absolutiseScripts "`readlink "$SCRIPTS"`" "$SCRIPTS" ; done ; SCRIPTS="`dirname "$SCRIPTS"`"
. "$SCRIPTS/util.sh"

argVersion="`argVersionSauf "-p -s" "$@"`" # Un suffixe indiqué en "-s 7.2" ne veut pas dire qu'on force à la version 7.2 (qui n'existe pas d'ailleurs).

# Historique des versions gérées

presentOuPrerequis "php+$argOptions" "$argVersion"

auSecours()
{
	moi="`basename "$0"`"
	cat >&2 <<TERMINE
# Utilisation: $moi [-s <suffixe démarreur>] [-p <port>] [<sélecteur de version>]
TERMINE
	exit 1
}

analyserParametres()
{
	vars=""
	compteMaitre=root
	port=9000
	suffixe=
	PARAMS_SERVEUR=
	varrun=
	varlog=
	while [ $# -gt 0 ]
	do
		case "$1" in
			-r) PARAMS_SERVEUR="$PARAMS_SERVEUR $1 $2" ; shift ;;
			-U) shift ; compteMaitre="$1" ; [ -z "$compte" -a "c$1" != croot ] && compte="$1" || true ;;
			-u) compte="$2" ; shift ;;
			-s) suffixe="$2" ; shift ;;
			-p) port="$2" ; shift ;;
			--var-run=*) varrun="`echo "$1" | cut -d = -f 2-`" ;;
			--var-log=*) varlog="`echo "$1" | cut -d = -f 2-`" ;;
			*) apAffecter "$1" $vars ;;
		esac
		shift
	done

	if [ -z "$compte" ]
	then
		comptesEnvisages="web www daemon"
		for compte in $comptesEnvisages personne
		do
			id "$compte" 2> /dev/null >&2 && break
		done
		if [ "$compte" = personne ]
		then
			echo "# Impossible de trouver un des comptes sous lequel tourner ($comptesEnvisages). Forcez un compte en le précisant en second paramètre (il sera créé si nécessaire)." >&2
			exit 1
		fi
	fi
}

filtrerConfs()
{
	local bdestphp="`basename "$destphp"`"
	local bdest="`basename "$dest"`"
	local commentaireSiDejaCompteLocal=
	[ "$compteMaitre" = root ] || commentaireSiDejaCompteLocal=";"
	
	groupe="`id -g -n $compte`"
	for i in "$@"
	do
		filtrer "$i" sed \
			-e "/^user *=/s#=.*#= $compte#" \
			-e "/^user *=/s/^/$commentaireSiDejaCompteLocal/" \
			-e "/^group *=/s#=.*#= $groupe#" \
			-e "/^group *=/s/^/$commentaireSiDejaCompteLocal/" \
			-e "/^listen *=/s#=.*#= 127.0.0.1:$port#" \
			-e "s#/$bdestphp/etc/php-fpm.d#/$bdest/etc/php-fpm$suffixe.d#g"
	done
}

analyserParametres "$@"

prerequis

# Modifications

# Variables

version="$version_php"

destiner

echo "Auto-démarrage…" >&2
# Si le suffixe vaut x, xx, xxx, etc., on remplace par les éléments de version correspondants.
if echo "$suffixe" | grep -q '^xx*$'
then
	nElementsSuffixe="`printf "%s" "$suffixe" | wc -c | tr -d ' '`"
	suffixe="`echo "$version_php" | cut -d . -f "1-$nElementsSuffixe" | tr -d .`"
fi
		conf="$dest/etc/php-fpm$suffixe.conf"
	[ -n "$varrun" ] || varrun="$dest/var/run"
	[ -n "$varlog" ] || varlog="$dest/var/log"
	pid="$varrun/php-fpm$suffixe.pid"

_patronTemp()
{
	local desttemp="$1"
rm -Rf "$desttemp"
		
mkdir -p "$desttemp/etc/rc.d"
	[ -d "$varrun" -a -d "$varlog" ] || serveur_patronVars "$desttemp" var/run var/log
cp "$destphp/etc/php-fpm.conf" "$TMP/$$/dest/etc/php-fpm$suffixe.conf"
	changerconf -c \; pid="$pid" error_log="$varlog/php-fpm$suffixe.log" "$desttemp/etc/php-fpm$suffixe.conf"
	changerconf -c \; -d ' = ' 'env[PATH]=$PATH' 'env[LD_LIBRARY_PATH]=$LD_LIBRARY_PATH' "$desttemp/etc/php-fpm$suffixe.conf"
if [ -d "$destphp/etc/php-fpm.d" ]
then
	destpointd="$TMP/$$/dest/etc/php-fpm$suffixe.d"
	cp -R "$destphp/etc/php-fpm.d" "$destpointd"
	[ -e "$destpointd/www.conf.default" ] && mv "$destpointd/www.conf.default" "$destpointd/www.conf" || true
fi
filtrerConfs `find "$TMP/$$/dest/etc" -type f`
}

_pousserPatronTemp()
{
	local desttemp="$1" dest="$2"
sudo mkdir -p "$dest"
	sudo cp -Rp "$desttemp/." "$dest/."
	serveur_chownVars
}

desttemp="$TMP/$$/dest"
_patronTemp "$desttemp"
_pousserPatronTemp "$desttemp" "$dest"

LD_LIBRARY_PATH_PHP_ET_DEPS="`prereqs -s lib64 -s lib -d $destphp $INSTALLS`"
PATH_ENRICHI="`args_reduc -d : "$destphp/bin:$GUILI_PATHEXT"`" # Ne serait-ce que pour que si notre php-fpm fait un system('php --version') il tombe sur la même version que lui. Inconvénient: on embarque dans php-fpm tout notre $PATH utilisateur (alors qu'il est censé partir avec un environnement minimal).
serveur -d "$dest" -p "$pid" -u "$compteMaitre" -e PATH="$PATH_ENRICHI" -e LD_LIBRARY_PATH="$LD_LIBRARY_PATH_PHP_ET_DEPS" $PARAMS_SERVEUR demon php-fpm$suffixe \
	"$destphp/sbin/php-fpm --fpm-config $conf"

sutiliser -
